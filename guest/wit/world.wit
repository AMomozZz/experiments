
package pkg:component;

interface data-type {
    record bid {
        auction: u64,
        bidder: u64,
        price: u64,
        channel: string,
        url: string,
        
        date-time: u64,
        extra: string,
    }

    record pruned-bid {
        auction: u64,
        price: u64,
    }
}

interface nexmark {
    use data-type.{bid, pruned-bid};
    //filter
    q2: func(auction: u64, price: u64, filters: list<u64>) -> option<tuple<u64, u64>>;

    //single-filter
    single-filter: func(p: u64, filters: list<u64>) -> bool;

    //e1
    e1: func(price: u64) -> bool;

    all-in-wasm: func(bid: bid) -> option<pruned-bid>;

    all-in-wasm-not-pruned: func(bid: bid) -> option<bid>;
}

world component {
    import data-type;
    export nexmark;
}
